Cameras:

  # Cameras configurations

  camera1: # camera id
    camera: '/dev/video0' # Camera device path
    name: 'Laptop' # Name of the camera
    target_fps: 15 # Target frames per second for the video stream (set it lower than the camera's maximum FPS)
    port: 50000 # Port for the stream server to stream video
    stream_quality: 75 # Stream quality from 0 (worse) to 100 (better)
    show_fps: False # Whether to show fps for this camera in frames (True/False)
    # following parameters are not mandatory, if not set OpenCV will use default values
    source_format: 'MJPG' # Video pixel format, e.g. 'MJPG', 'YUYV', ... (has to be supported by camera)
    width: 640 # Width of the video stream (has to be supported by camera)
    height: 480 # Height of the video stream (has to be supported by camera)
    source_fps: 30 # Actual FPS to read from camera (has to be supported by camera)

  camera2:
    camera: '/dev/video4'
    name: 'Front Door'
    target_fps: 15
    port: 50001
    stream_quality: 75
    show_fps: False
  
  # ...

Recordings:  
  save: True # Whether to save camera recordings (True/False)
  # following parameters are required only if save is True
  directory: '../data/recording' # Directory where camera recordings will be saved 
                                 # (absolute path or relative path to where the script is being run from)
  max_days_to_save: 3 # Maximum number of days to keep the saved recordings
  encode_to_h264: 2 # Whether to encode to h264. (0/1/2) 
                    # 0 -> Save recordings in MJPG .avi (no-encode).
                    # 1 -> Save real time recordings in MJPG .avi, and convert to h264 .mp4 after each hour.
                    # 2 -> Save recordings in h264 .mp4 (including real time recording).
  h264_encoder: 'h264_vaapi' # h264 encoder (Required if `encode_to_h264` is 1 or 2)
                           # Software(CPU): libx264, ...
                           # Hardware Acceleration: h264_qsv, h264_amf, h264_nvenc, h264_vaapi, h264_omx, h264_v4l2m2m, ...
  bitrate: 1000 # Bitrate of h264 encoded recording in kbps. (Required if `encode_to_h264` is 1 or 2)

Motion:

  # Motion configurations

  # following parameters are required only if at least one camera has motion enbaled
  directory: '../data/motion' # Directory where motion recordings will be saved 
  max_days_to_save: 3 # Maximum number of days to keep the saved motion recordings
  encode_to_h264: 2 # Whether to encode to h264. (0/1/2) 
                    # 0 -> Save motion recordings in MJPG .avi (no-encode).
                    # 1 -> Save real time motion recordings in MJPG .avi, and convert to h264 .mp4 after each hour.
                    # 2 -> Save motion recordings in h264 .mp4 (including real time recording).
  h264_encoder: 'h264_vaapi' # h264 encoder (Required if `encode_to_h264` is 1 or 2)
                           # Software(CPU): libx264, ...
                           # Hardware Acceleration: h264_qsv, h264_amf, h264_nvenc, h264_vaapi, h264_omx, h264_v4l2m2m, ...
  bitrate: 1000 # Bitrate of h264 encoded motion recording in kbps. (Required if `encode_to_h264` is 1 or 2)

  camera1: # camera id (use the same camera id as `Cameras`)
    enabled: True # Whether to enable detect camera motion (True/False)
    # following parameters are required only if active is True
    noise_level: 35 # Threshold for distinguishing between noise and motion at pixel level. (1-255 int)
    threshold: 1000000 # 
    # minimum_motion_frames: # number of frames in a row with motion detected to start the motion event (1-... int)
    # pre_capture: # number of frames to capture before motion is detected (high value leads to high RAM usage) (0-... int)
    # post_capture: # number of frames to capture after no motion is detected (unlike pre_capture doesn't have high RAM usage) (0-... int)
    # event_gap: # seconds to end motion event after no motion detected + post_capture (0-... int)
  
  camera2:
    enabled: True
    noise_level: 35
    threshold: 1000000

  # ...

Logs:
  save: True # Whether to save logs (True/False)
  # following parameters are required only if save is True
  directory: '../logs' # Directory where logs will be saved
                       # (absolute path or relative path to where the script is being run from)
  max_size: 1024 # Maximum size of each log file in MB
  max_files: 2 # Maximum number of log files to keep
